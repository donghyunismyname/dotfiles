# SpaceVim tmux
#set-option -sg escape-time 100
set -g focus-events on
#set-option -sa terminal-overrides ',XXX:RGB'


# vim color scheme
set -g default-terminal "xterm-256color"

# Reload configuration
bind r source-file ~/.tmux.conf \; display "Reloaded from ~/.tmux.conf"

# use mouse
set -g mouse on

# -r option repeat time x milliseconds
set-option -g repeat-time 3000

# More history and scrollback
set-option -g history-limit 100000


# ========== Prefix ==========
set-option -g prefix2 C-Space
bind C-space resize-pane -Z # Zoom
# bind C-space last-window
set-option -g prefix C-v
bind C-v resize-pane -Z
# bind C-v last-window
bind v send-prefix




# vi-mode on copy mode (prefix + [)
setw -g mode-keys vi


# navigate panes (to be overwritten by vim-tmux-navigator)
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# split panes
bind h split-window -bh -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind k split-window -bv -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"


# resize pane
bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R


# join two panes
bind left  choose-window 'join-pane -bh -s "%%"'
bind down  choose-window 'join-pane -v  -s "%%"'
bind up    choose-window 'join-pane -bv -s "%%"'
bind right choose-window 'join-pane -h  -s "%%"'
# ! to detach pane from window, default keymap


# navigate windows
bind -n M-i previous-window
bind -n M-o next-window
bind -n C-f previous-window
bind -n C-g next-window

bind           i previous-window \; switch-client -T WINDOW
bind -T WINDOW i previous-window \; switch-client -T WINDOW
bind           o next-window     \; switch-client -T WINDOW
bind -T WINDOW o next-window     \; switch-client -T WINDOW


# move window while holding
bind           I swap-window -t - \; previous-window \; switch-client -T WINDOW
bind -T WINDOW I swap-window -t - \; previous-window \; switch-client -T WINDOW
bind           O swap-window -t + \; next-window     \; switch-client -T WINDOW
bind -T WINDOW O swap-window -t + \; next-window     \; switch-client -T WINDOW





# ========== Appearance (Wookayin) ==========

# pane/window numbers be 1-indexed
set-option -g base-index 1
set-option -g pane-base-index 1

# window name as working directory
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Set title, which is also showed at iTerm tab
# For special character sequences such as #S, refer to manual
#set-option -g set-titles on
#set-option -g set-titles-string '#S #I:#W (#h)' # session name, window index, window title, hostname

# Status Bar: auto-generated by tmuxline.vim
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour231,bg=colour31"
set -g status-right-style "none"
#set -g status-utf8 "on"
set -g status-style "bg=colour234,none"
set -g message-style "fg=colour231,bg=colour31"
set -g pane-border-style "fg=colour240"
set -g status-right-length "100"
set -g status-left-length "100"

TMUX_STATUS_BG="colour$PROMPT_HOST_COLOR"

# Reference: http://man7.org/linux/man-pages/man1/tmux.1.html#FORMATS
# Reference: https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg
setw -g window-status-activity-style "none"
setw -g window-status-activity-style "fg=colour250,bg=colour234,underscore"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour250,bg=colour234,none"

# [left status] session name (#S), hostname (#h)
#set -g status-left "#[fg=colour16,bg=$TMUX_STATUS_BG,bold] #S #[fg=colour234,bg=$TMUX_STATUS_BG,nobold,nounderscore,noitalics]#[fg=$TMUX_STATUS_BG,bg=colour234] #h "
set -g status-left "#[fg=red,bold] #S "

# [right status] prefix, datetime, etc.
#set -g status-right "#[fg=colour231,bg=colour04]#{s/e(.+)$/ \\1 :#{s/root//:client_key_table}}#[default]#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=white,bg=red,bold]#{#{s/root//:client_key_table}}#[default]#[fg=colour236,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour236] %Y-%m-%d  %H:%M #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics]"

# [window] number (#I), window flag (#F) such as Marked or Zoomed. If marked (i.e. #F contains 'M'), highlight it.
setw -g window-status-format "#[fg=colour31,bg=colour234] #I#F#[fg=colour250,bg=colour234] #{?#{m:*M*,#F},#[fg=colour233]#[bg=colour71],}#W#[bg=colour234] "

# [active window] similar, but use blue-ish color. If panes are synchronized, display the information.
setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour87,bg=colour31] #I#F#[fg=colour231,bg=colour31,bold] #W #{?pane_synchronized,#[fg=colour190](SYNC),}#[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]"

# window modes color (e.g. choosing window: <prefix>w / escape mode)
setw -g mode-style bg=colour31,fg=white

# pane border colors
set-option -g pane-border-style fg=colour240,bg=default   # inactive pane border: gray
set-option -g pane-active-border-style fg=white,bg=default  # active pane border: green

# Pane number and title shown on the border
set-option -g pane-border-status 'top'
set-option -g pane-border-format '(#{pane_index}) #{?pane_active,#[fg=white],}#T#F'

# (DISABLED) Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
#set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
#set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
#set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
#set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# window notifications (??? what's it for?)j
#set-window-option -g monitor-activity on
#set-option -g visual-activity off          # no 'Activity in window <n>'






# ========== vim-tmux-navigator ==========
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


