(defcfg 
  concurrent-tap-hold yes  ;; required by defchordsv2-experiment
  log-layer-changes no     ;; performance reasons
  chords-v2-min-idle-experimental 200
  sequence-input-mode visible-backspaced
)
(defsrc
  ;; grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc                 ralt rmet rctl
)

(defoverrides
  (ctl ;) (bspc)
  (ctl ') (del)
)

(defvar
  tt 300 ;; tap timeout (repeat)
  ct 100 ;; chord timeout
  ost 2000 ;; one-shot timeout

  ht 300 ;; hold timeout
  st 200 ;; shift timeout
  lt 300 ;; layer timeout
)

(defalias
  ddd (layer-toggle ddd)   
	nav (layer-toggle nav)
  cap (multi ctl (layer-toggle cap))
  capspc (layer-toggle nav)
)

(defalias
  ;; shift
  ;-sft (tap-hold $tt $st ; sft)
  a-sft (tap-hold $tt $st a sft)
  cf-sft (tap-hold $tt $st C-f sft)
  f-sft (tap-hold $tt $st f sft)
  j-sft (tap-hold $tt $st j sft)

  ;; home
  l-hom (tap-hold $tt $ht left home)
  cl-hom (tap-hold $tt $ht C-left home)
  i-hom (tap-hold $tt $ht i home)

  ;; end
  r-end (tap-hold $tt $ht right end)
  cr-end (tap-hold $tt $ht C-right end)
  o-end (tap-hold $tt $ht o end)

  ;; layer 
  k-lay (tap-hold $tt $lt k @ddd)
  k-mul (multi k (layer-toggle pdd))
  ;; k-seq (tap-hold-press $tt $lt k sldr)
  k-seq sldr 

  ;; alt
  lalt (tap-hold $tt $ht (one-shot $ost sft) alt)
  spc (tap-hold 0 500 spc sft)
)

(defseq
  aaa (a a a)
)
(defvirtualkeys
  aaa (macro h a p p y)
)

;; chord/combo
(defchordsv2-experimental
;;   (ctl spc) @capspc 100 all-released ()

;;   ;; shift
;;   ;; (d f) sft $ct first-release ()
;;   ;; (j k) sft $ct first-release ()
;;   ;; (spc f j) sft $ct all-released ()

;;   ;; special keys left
;;   (w e) =   $ct first-release (ddd nav cap)
;;   (e r) S-= $ct first-release (ddd nav cap)

;;   (s d) -   $ct first-release (ddd nav cap)
;;   (d f) S-- $ct first-release (ddd nav cap)
;;   (s f) esc $ct first-release (ddd nav cap)

;;   (w f) tab $ct first-release (ddd nav cap)

  ;; special keys right
  (u i) home $ct first-release ()
  (i o) end $ct first-release ()

;;   (j k) (multi (macro bspc) (layer-toggle ddd)) $ct all-released (ddd nav cap)
;;   (k l) (multi (macro del) (layer-toggle ddd))  $ct all-released (ddd nav cap)
  (j l) esc $ct first-release ()
  (j i) tab $ct first-release ()
  (j o) ret $ct first-release ()


;;   ;; layers
;;   ;; (f spc) @mov $ct all-released ()
;;   ;; (j spc) @mov $ct all-released ()
;;   ;; (d spc) @digit $ct all-released ()
;;   ;; (k spc) @digit $ct all-released ()
;;   ;; (s spc) @symbol $ct all-released ()
;;   ;; (l spc) @symbol $ct all-released ()

;;   ;; symbols
;;   ;; (z i) S-9 $ct first-release ()
;;   ;; (z o) S-0 $ct first-release ()
;;   ;; (z h) -   $ct first-release ()
;;   ;; (z j) S-- $ct first-release ()
;;   ;; (z k) =   $ct first-release ()
;;   ;; (z l) S-= $ct first-release ()
;;   ;; (z m) [   $ct first-release ()
;;   ;; (z ,) ]   $ct first-release ()
;;   ;; (z .) {   $ct first-release ()
;;   ;; (z /) }   $ct first-release ()

;;   ;; (spc j) -   $ct first-release ()
;;   ;; (spc k) S-- $ct first-release ()
;;   ;; (spc l) =   $ct first-release ()
;;   ;; (spc ;) S-= $ct first-release ()

;;   ;; (spc a) ;   $ct first-release ()
;;   ;; (spc s) S-; $ct first-release ()
;;   ;; (spc d) '   $ct first-release ()
;;   ;; (spc f) S-' $ct first-release ()
  
;;   ;; (spc i) S-9 $ct first-release ()
;;   ;; (spc o) S-0 $ct first-release ()

;;   ;; (spc q) S-[ $ct first-release ()
;;   ;; (spc w) S-] $ct first-release ()
;;   ;; (spc e) [   $ct first-release ()
;;   ;; (spc r) ]   $ct first-release ()


;;   ;; (spc v) S-\ $ct first-release ()
)


(deflayer base
  tab       q         w         e         r         t         y         u         i         o         p         [         ]         \
  @cap      a         s         d         @f-sft    g         h         @j-sft    @k-lay    l         ;         '         ret
  sft       z         x         c         v         b         n         m         ,         .         /         rsft 
  @cap      met       alt                           spc                                     ralt       rmet      rctl
)

(deflayer ddd
  _         _         _         _         _         _         _         _         _         _         _         _         _         _
  _         _         _         _         _         _         _         bspc      _         del       _         _         _
  _         _         _         _         _         _         _         _         _         _         _         _ 
  _         _         _         _         _         _         _
)

(defalias
  pddj (multi (layer-switch ddd) (macro bspc bspc))
  pddl (multi (layer-switch ddd) (macro bspc del))
)
(deflayer pdd
  _         _         _         _         _         _         _         _         _         _         _         _         _         _
  _         _         _         _         _         _         _         @pddj     _         @pddl     _         _         _
  _         _         _         _         _         _         _         _         _         _         _         _ 
  _         _         _         _         _         _         _
)
(deflayer intact
  tab       q         w         e         r         t         y         u         i         o         p         [         ]         \
  ctl       a         s         d         f         g         h         j         k         l         ;         '         ret
  sft       z         x         c         v         b         n         m         ,         .         /         rsft 
  ctl       met       alt                           spc                                     ralt      rmet      rctl
)



(deflayer nav 
  tab       _         _         _         _         t         C-y       C-z       C-left    C-right   -         C-M-left  C-M-right \
  ctl       _         _         _         sft       g         left      down      up        right     bspc      del       ret
  sft       _         _         _         _         b         tab       ret       C-bspc    C-del     esc       rsft
  ctl       met       alt                           spc                                     ralt      rmet      rctl
)

(deflayer cap
  _         _         _         _         _         _         _         _         _         _         _         _         _         _
  _         _         _         _         _         _         _         _         _         _         _         _         _
  _         _         _         _         _         _         _         _         _         _         _         _ 
  _         _         _         @capspc   _         _         _
)