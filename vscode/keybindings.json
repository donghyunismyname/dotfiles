// Place your key bindings in this file to override the default
[
    // Ctrl + up/down
    {
        "key": "ctrl+up",
        "command": "runCommands",
        "args": {
            "commands": [
                "cursorUp",
                "cursorUp",
                "cursorUp",
                "cursorUp",
                "cursorUp",
            ]
            },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+down",
        "command": "runCommands",
        "args": {
            "commands": [
                "cursorDown",
                "cursorDown",
                "cursorDown",
                "cursorDown",
                "cursorDown",
            ]
        },
        "when": "editorTextFocus"
    },


    // Multiple Cursors Find Next Match
    {
        "key": "ctrl+m",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },

    // Navigate Left Down Up Right hjkl
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus",
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus",
    },


    // Vim Insert Mode hjkl
    {
        "key": "ctrl+h",
        "command": "cursorLeft",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "cursorUp",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },

    // Vim Inseret Mode fast delete
    {
        "key": "ctrl+,",
        "command": "deleteWordPartLeft",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },
    {
        "key": "ctrl+.",
        "command": "deleteWordPartRight",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },

    // Vim Insert Mode Fast Curosr Movement
    {
        "key": "ctrl+i",
        "command": "cursorWordPartLeft",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },
    {
        "key": "ctrl+o",
        "command": "cursorWordPartRight",
        "when": "vim.mode == 'Insert' && editorTextFocus"
    },

    // insert line above/below
    {
        "key": "ctrl+p",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus"
    },


    // Panel view navigation
    {
        "key": "ctrl+,",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+.",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },

    // Panel terminal navigation bottom hjkl
    {
        "key": "ctrl+h",
        "when": "panelFocus && panelPosition == 'bottom'",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.terminal.focusTabs",
                "list.focusUp",
                "list.select"
            ]
        },
    },
    {
        "key": "ctrl+l",
        "when": "panelFocus && panelPosition == 'bottom'",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.terminal.focusTabs",
                "list.focusDown",
                "list.select"
            ]
        },
    },
    {
        "key": "ctrl+k",
        "when": "panelFocus && panelPosition == 'bottom'",
        "command": "workbench.action.focusActiveEditorGroup",
    },

    // Panel terminal navigation left right hjkl
    {
        "key": "ctrl+k",
        "when": "panelFocus && (panelPosition == 'left' || panelPosition == 'right')",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.terminal.focusTabs",
                "list.focusUp",
                "list.select"
            ]
        },
    },
    {
        "key": "ctrl+j",
        "when": "panelFocus && (panelPosition == 'left' || panelPosition == 'right')",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.terminal.focusTabs",
                "list.focusDown",
                "list.select"
            ]
        },
    },

    // Panel Terminal Split hjkl
    {
        "key": "ctrl+shift+j",
        "when": "panelFocus",
        "command": "workbench.action.terminal.split",
    },
    {
        "key": "ctrl+shift+l",
        "when": "panelFocus",
        "command": "workbench.action.terminal.split",
    },
    {
        "key": "ctrl+shift+h",
        "when": "panelFocus",
        "command": "workbench.action.terminal.unsplit",
    },
    {
        "key": "ctrl+shift+k",
        "when": "panelFocus",
        "command": "workbench.action.terminal.unsplit",
    },


    // Move between editor tabs
    {
        "key": "ctrl+.",
        "command": "workbench.action.nextEditorInGroup",
        "when": "!sideBarFocus && !panelFocus && vim.mode!='Insert'",
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.previousEditorInGroup",
        "when": "!sideBarFocus && !panelFocus && vim.mode!='Insert'",
    },
    {
        "key": "ctrl+,",
        "command": "-workbench.action.openSettings"
    },


    // Split Editor hjkl
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.splitEditorLeft",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.splitEditorUp",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.splitEditorRight",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.splitEditorDown",
        "when": "!panelFocus",
    },


    // Split Editor Terminal hjkl
    {
        "key": "ctrl+shift+h",
        "when": "terminalFocus && !panelFocus",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.splitEditorLeft",
                "workbench.action.createTerminalEditor"
            ]
        }
    },
    {
        "key": "ctrl+shift+j",
        "when": "terminalFocus && !panelFocus",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.splitEditorDown",
                "workbench.action.createTerminalEditor"
            ]
        }
    },
    {
        "key": "ctrl+shift+k",
        "when": "terminalFocus && !panelFocus",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.splitEditorUp",
                "workbench.action.createTerminalEditor"
            ]
        }
    },
    {
        "key": "ctrl+shift+l",
        "when": "terminalFocus && !panelFocus",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.splitEditorRight",
                "workbench.action.createTerminalEditor"
            ]
        }
    },

    // Move editor to another group hjkl
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+alt+j",
        "command": "workbench.action.moveEditorToBelowGroup",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+alt+k",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "!panelFocus",
    },

    // Resize editor
    // {
    //     "key": "ctrl+[",
    //     "command": "workbench.action.decreaseViewWidth"
    // },
    // {
    //     "key": "ctrl+]",
    //     "command": "workbench.action.increaseViewWidth"
    // },
    // {
    //     "key": "ctrl+shift+[",
    //     "command": "workbench.action.decreaseViewHeight"
    // },
    // {
    //     "key": "ctrl+shift+]",
    //     "command": "workbench.action.increaseViewHeight"
    // },



    // Trigger Suggest
    // {
    //     "key": "ctrl+space space",
    //     "command": "editor.action.triggerParameterHints",
    //     "when": "editorHasSignatureHelpProvider && editorTextFocus"
    // },
    // {
    //     "key": "ctrl+shift+space",
    //     "command": "-editor.action.triggerParameterHints",
    //     "when": "editorHasSignatureHelpProvider && editorTextFocus"
    // },
    // {
    //     "key": "ctrl+space space",
    //     "command": "editor.action.triggerSuggest",
    //     "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    // },
    // {
    //     "key": "ctrl+space",
    //     "command": "-editor.action.triggerSuggest",
    //     "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    // },


    // Zoom toggle
    {
        "key": "ctrl+enter",
        // "command": "workbench.action.toggleEditorWidths",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "!panelFocus",
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "panelFocus",
    },


    // Quick Open Navigation
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },

    // Nagivate suggestions
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },



    // alt + hjkl
    // {
    //     "key": "alt+h",
    //     "command": "editor.action.moveCarretLeftAction",
    // },
    // {
    //     "key": "alt+j",
    //     "command": "editor.action.moveLinesDownAction",
    // },
    // {
    //     "key": "alt+k",
    //     "command": "editor.action.moveLinesUpAction",
    // },
    // {
    //     "key": "alt+l",
    //     "command": "editor.action.moveCarretRightAction",
    // },


    // Create new terminal
    {
        "key": "ctrl+t",
        // "command": "workbench.action.createTerminalEditor"
        "command": "runCommands",
        "when": "!panelFocus",
        "args": {
            "commands": [
                "workbench.action.createTerminalEditorSameGroup",
                // "workbench.action.terminal.goToRecentDirectory",
            ]
        }
    },
    // {
    //     "key": "ctrl+t",
    //     "command": "runCommands",
    //     "when": "panelFocus",
    //     "args": {
    //         "commands": [
    //             "workbench.action.terminal.new",
    //             "workbench.action.terminal.goToRecentDirectory",
    //         ]
    //     }
    // },


    // Search symbol in workspace (not frequently used)
    {
        "key": "ctrl+g",
        "command": "workbench.action.showAllSymbols",
        "when": "editorFocus",
    },

    // Run recent terminal command
    // {
    //     "key": "ctrl+r",
    //     "command": "workbench.action.terminal.runRecentCommand",
    //     "when": "terminalFocus",
    // },


    // Disable keys
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.openfile"
    },
    // Disable ctrl+w to close terminal
    // {
    //     "key": "ctrl+w",
    //     "command": "-workbench.action.terminal.killEditor",
    // },


    // Hover hjkl
    {
        "key": "h",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "l",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused"
    },
    
    // Multicursor up/down
    {
        "key": "alt+k",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus && !suggestWidgetHasFocusedSuggestion"
    },


    // alt hjkl
    // terminal scroll up/down
    // {
    //     "key": "alt+k",
    //     "command": "workbench.action.terminal.scrollUp",
    //     "when": "terminalFocus"
    // },
    // {
    //     "key": "alt+j",
    //     "command": "workbench.action.terminal.scrollDownPage",
    //     "when": "terminalFocus"
    // },
    // {
    //     "key": "alt+h",
    //     "command": "workbench.action.terminal.scrollUpPage",
    //     "when": "terminalFocus"
    // },
    // {
    //     "key": "alt+l",
    //     "command": "workbench.action.terminal.scrollDownPage",
    //     "when": "terminalFocus"
    // },

    // ctrl alt hjkl
    // terminal resize
    // {
    //     "key": "ctrl+alt+h",
    //     "command": "workbench.action.terminal.resizePaneLeft",
    //     "when": "panelFocus",
    // },
    // {
    //     "key": "ctrl+alt+j",
    //     "command": "workbench.action.terminal.resizePaneDown",
    //     "when": "panelFocus",
    // },
    // {
    //     "key": "ctrl+alt+k",
    //     "command": "workbench.action.terminal.resizePaneUp",
    //     "when": "panelFocus",
    // },
    // {
    //     "key": "ctrl+alt+l",
    //     "command": "workbench.action.terminal.resizePaneRight",
    //     "when": "panelFocus",
    // },

    
    // Jumpy2
    // {
    //     "key": "ctrl+'",
    //     "command": "jumpy2.toggle",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "shift+enter",
    //     "command": "-jumpy2.toggle",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+'",
    //     "command": "jumpy2.toggleSelection",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "shift+alt+enter",
    //     "command": "-jumpy2.toggleSelection",
    //     "when": "editorTextFocus"
    // },


    // Open Breadcrumb
    // {
    //     "key": "ctrl+;",
    //     "command": "breadcrumbs.focusAndSelect",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "[",
    //     "command": "runCommands",
    //     "args": {
    //         "commands": [
    //             "breadcrumbs.focusAndSelect",
    //             "list.focusUp",
    //             "list.select",
    //         ]
    //     },
    //     "when": "editorFocus && vim.mode == 'Normal'",
    // },
    // {
    //     "key": "]",
    //     "command": "runCommands",
    //     "args": {
    //         "commands": [
    //             "breadcrumbs.focusAndSelect",
    //             "list.focusDown",
    //             "list.select",
    //         ]
    //     },
    //     "when": "editorFocus && vim.mode == 'Normal'",
    // },


    // Previous/next item in explorer
    {
        "key": "alt+a",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.files.action.showActiveFileInExplorer",
                "list.focusUp",
                "list.selectAndPreserveFocus",
            ]
        },
    },
    {
        "key": "alt+d",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.files.action.showActiveFileInExplorer",
                "list.focusDown",
                "list.selectAndPreserveFocus",
            ],
        },
    },

    // When Find Widget is visible (ctrl+f)
    {
        "key": "ctrl+f",
        "command": "closeFindWidget",
        "when": "findWidgetVisible",
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.nextMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.previousMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.previousMatchFindAction",
        "when": "findWidgetVisible"
    },

    // Replace default ctrl+f
    {
        "key": "ctrl+f",
        "command": "fuzzySearch.activeTextEditor",
    },



    // // Disable default key bindings for expand-region
    {
        "key": "ctrl+w",
        "command": "-expand_region",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-undo_expand_region",
        "when": "editorHasSelection && editorTextFocus"
    },
    // // Replace key bindings for expand-region
    // {
    //     "key": "ctrl+;",
    //     "command": "expand_region",
    //     "when": "editorTextFocus",
    // },
    // {
    //     "key": "ctrl+'",
    //     "command": "undo_expand_region",
    //     "when": "editorHasSelection && editorTextFocus"
    // },



    // Copilot Chat
    {
        "key": "ctrl+enter",
        "command": "workbench.action.quickchat.launchInlineChat",
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.chat.start",
        "when": "panelFocus",
    },
    {
        "key": "ctrl+enter",
        "command": "inlineChat.acceptChanges",
        "when": "inlineChatVisible && editorFocus",
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.chat.runCommand",
        "when": "inlineChatVisible && terminalFocus",
    },

    // Remove up/down from selecting suggestions
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    
    //     "key": "alt+m",
    //     "command": "bookmarks.toggle",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+alt+k",
    //     "command": "-bookmarks.toggle",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "alt+oem_comma",
    //     "command": "bookmarks.jumpToNext",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+alt+l",
    //     "command": "-bookmarks.jumpToNext",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "alt+oem_period",
    //     "command": "bookmarks.jumpToPrevious",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "ctrl+alt+j",
    //     "command": "-bookmarks.jumpToPrevious",
    //     "when": "editorTextFocus"
    // }
]
